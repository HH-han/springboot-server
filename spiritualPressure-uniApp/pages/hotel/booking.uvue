<template>
	<view class="container">
		<!-- 顶部导航 -->
		<view class="nav-header">
			<uni-icons type="arrow-left" size="24" color="#333" @click="goBack"></uni-icons>
			<text class="nav-title">酒店预订</text>
			<view style="width: 24rpx"></view>
		</view>

		<!-- 酒店信息卡片 -->
		<view class="hotel-card">
			<image class="hotel-image" :src="'/static/hotel/hotel' + bookingData.hotelId + '.jpg'" mode="aspectFill" />
			<view class="hotel-info">
				<text class="hotel-name">{{ bookingData.hotelName }}</text>
				<text class="room-type">{{ bookingData.roomType }}</text>
				<text class="hotel-price">¥{{ bookingData.roomPrice }} <text class="unit">/晚</text></text>
			</view>
		</view>

		<!-- 预订表单 -->
		<view class="booking-form">
			<view class="form-section">
				<text class="section-title">入住信息</text>
				
				<!-- 日期选择 -->
				<view class="form-group">
					<text class="form-label">入住日期</text>
					<picker 
						mode="date" 
						:value="bookingData.checkInDate" 
						@change="onCheckInDateChange"
						:start="getToday()"
					>
						<view class="form-input">
							<text>{{ bookingData.checkInDate }}</text>
							<uni-icons type="calendar" size="20" color="#999"></uni-icons>
						</view>
					</picker>
				</view>

				<view class="form-group">
					<text class="form-label">离店日期</text>
					<picker 
						mode="date" 
						:value="bookingData.checkOutDate" 
						@change="onCheckOutDateChange"
						:start="bookingData.checkInDate"
					>
						<view class="form-input">
							<text>{{ bookingData.checkOutDate }}</text>
							<uni-icons type="calendar" size="20" color="#999"></uni-icons>
						</view>
					</picker>
				</view>

				<!-- 入住人数 -->
				<view class="form-group">
					<text class="form-label">入住人数</text>
					<view class="guest-selector">
						<button 
							class="count-btn" 
							:disabled="bookingData.guests <= 1"
							@click="changeGuestCount(-1)"
						>-</button>
						<text class="guest-count">{{ bookingData.guests }} 人</text>
						<button 
							class="count-btn" 
							:disabled="bookingData.guests >= 4"
							@click="changeGuestCount(1)"
						>+</button>
					</view>
				</view>

				<!-- 联系人信息 -->
				<view class="form-group">
					<text class="form-label">联系人</text>
					<input 
						class="form-input" 
						v-model="bookingData.contactName" 
						placeholder="请输入联系人姓名"
					/>
				</view>

				<view class="form-group">
					<text class="form-label">手机号</text>
					<input 
						class="form-input" 
						v-model="bookingData.contactPhone" 
						type="number" 
						placeholder="请输入手机号码"
						maxlength="11"
					/>
				</view>
			</view>

			<!-- 价格明细 -->
			<view class="form-section">
				<text class="section-title">价格明细</text>
				<view class="price-detail">
					<view class="price-item">
						<text>房费 ({{ nightCount }}晚)</text>
						<text>¥{{ totalRoomPrice }}</text>
					</view>
					<view class="price-item">
						<text>服务费</text>
						<text>¥{{ serviceFee }}</text>
					</view>
					<view class="price-item total">
						<text>总计</text>
						<text class="total-price">¥{{ totalPrice }}</text>
					</view>
				</view>
			</view>
		</view>

		<!-- 底部操作栏 -->
		<view class="action-bar">
			<view class="price-summary">
				<text class="total-label">总计:</text>
				<text class="total-amount">¥{{ totalPrice }}</text>
			</view>
			<button class="confirm-btn" :disabled="!canSubmit" @click="handleSubmit">
				确认预订
			</button>
		</view>

		<!-- 支付弹窗 -->
		<uni-popup ref="paymentPopup" type="center">
			<view class="payment-popup">
				<text class="popup-title">选择支付方式</text>
				<view class="payment-options">
					<view class="payment-option" @click="selectPayment('wechat')">
						<uni-icons type="weixin" size="32" color="#07C160"></uni-icons>
						<text>微信支付</text>
						<uni-icons 
							type="checkmark" 
							size="20" 
							color="#4A90E2"
							v-if="selectedPayment === 'wechat'"
						></uni-icons>
					</view>
					<view class="payment-option" @click="selectPayment('alipay')">
						<uni-icons type="alipay" size="32" color="#1677FF"></uni-icons>
						<text>支付宝</text>
						<uni-icons 
							type="checkmark" 
							size="20" 
							color="#4A90E2"
							v-if="selectedPayment === 'alipay'"
						></uni-icons>
					</view>
				</view>
				<button class="pay-btn" @click="handlePayment">立即支付</button>
			</view>
		</uni-popup>
	</view>
</template>

<script setup>
import { ref, computed, onMounted } from 'vue'
import { onLoad } from '@dcloudio/uni-app'

const bookingData = ref({
	hotelId: 1,
	hotelName: '北京王府井希尔顿酒店',
	roomType: '豪华大床房',
	roomPrice: 888,
	checkInDate: '',
	checkOutDate: '',
	guests: 2,
	contactName: '',
	contactPhone: ''
})

const hotelInfo = ref({
	id: 1,
	name: '北京王府井希尔顿酒店',
	image: '/static/images/hotel/hilton.jpg',
	address: '北京市东城区王府井大街',
	price: 888,
	rating: 4.7
})

const checkInDate = ref('2023-12-15')
const checkOutDate = ref('2023-12-17')
const nights = ref(2)
const roomType = ref('豪华大床房')
const guestCount = ref(2)
const contactName = ref('')
const contactPhone = ref('')
const specialRequest = ref('')
const selectedPayment = ref('wechat')
const paymentPopup = ref()

const totalPrice = computed(() => {
	return bookingData.value.roomPrice * nights.value
})

const canSubmit = computed(() => {
	return bookingData.value.contactName && bookingData.value.contactPhone && /^1[3-9]\d{9}$/.test(bookingData.value.contactPhone)
})

const goBack = () => {
	uni.navigateBack()
}

// 选择入住日期
const selectCheckInDate = () => {
	uni.showDatePicker({
		currentDate: checkInDate.value,
		success: (res) => {
			checkInDate.value = res.date
			calculateNights()
		}
	})
}

// 选择退房日期
const selectCheckOutDate = () => {
	uni.showDatePicker({
		currentDate: checkOutDate.value,
		success: (res) => {
			checkOutDate.value = res.date
			calculateNights()
		}
	})
}

// 计算住宿天数
const calculateNights = () => {
	if (bookingData.value.checkInDate && bookingData.value.checkOutDate) {
		const checkIn = new Date(bookingData.value.checkInDate)
		const checkOut = new Date(bookingData.value.checkOutDate)
		const timeDiff = checkOut.getTime() - checkIn.getTime()
		nights.value = Math.ceil(timeDiff / (1000 * 3600 * 24))
		if (nights.value <= 0) {
			nights.value = 1
			bookingData.value.checkOutDate = getNextDay(bookingData.value.checkInDate)
		}
	}
}

// 获取下一天日期
const getNextDay = (date) => {
	const nextDay = new Date(date)
	nextDay.setDate(nextDay.getDate() + 1)
	return nextDay.toISOString().split('T')[0]
}

// 选择房型
const selectRoomType = () => {
	uni.showActionSheet({
		itemList: ['豪华大床房', '豪华双床房', '行政套房', '总统套房'],
		success: (res) => {
			const types = ['豪华大床房', '豪华双床房', '行政套房', '总统套房']
			roomType.value = types[res.tapIndex]
		}
	})
}

// 选择入住人数
const selectGuestCount = () => {
	uni.showActionSheet({
		itemList: ['1人', '2人', '3人', '4人'],
		success: (res) => {
			guestCount.value = res.tapIndex + 1
		}
	})
}

// 提交预订
const handleSubmit = () => {
	if (!canSubmit.value) return
	
	// 验证表单
	if (!validateForm()) return
	
	// 打开支付弹窗
	paymentPopup.value.open()
}

const validateForm = () => {
	if (!bookingData.value.contactName) {
		uni.showToast({ title: '请输入联系人姓名', icon: 'none' })
		return false
	}
	
	if (!bookingData.value.contactPhone) {
		uni.showToast({ title: '请输入手机号码', icon: 'none' })
		return false
	}
	
	if (!/^1[3-9]\d{9}$/.test(bookingData.value.contactPhone)) {
		uni.showToast({ title: '手机号格式不正确', icon: 'none' })
		return false
	}
	
	return true
}

// 选择支付方式
const selectPayment = (method) => {
	selectedPayment.value = method
}

// 处理支付
const handlePayment = () => {
	// 模拟支付过程
	uni.showLoading({ title: '支付中...', mask: true })
	
	setTimeout(() => {
		uni.hideLoading()
		paymentPopup.value.close()
		
		// 支付成功
		uni.showToast({ title: '预订成功', icon: 'success' })
		
		// 跳转到订单详情
		setTimeout(() => {
			uni.redirectTo({ url: '/pages/order/detail' })
		}, 1500)
	}, 2000)
}

const loadHotelInfo = (hotelId) => {
	// 模拟加载酒店信息
	setTimeout(() => {
		hotelInfo.value = {
			id: hotelId,
			name: '测试酒店' + hotelId,
			image: '/static/images/hotel/hotel' + hotelId + '.jpg',
			address: '测试地址' + hotelId,
			price: 500 + hotelId * 100,
			rating: 4.5 + hotelId * 0.1
		}
	}, 500)
}

onLoad((options) => {
	// 处理页面参数
	if (options && options.data) {
		try {
			const parsedData = JSON.parse(decodeURIComponent(options.data))
			bookingData.value = { ...bookingData.value, ...parsedData }
		} catch (e) {
			console.error('解析页面参数失败:', e)
		}
	}
	
	// 设置默认日期
	const today = new Date()
	bookingData.value.checkInDate = today.toISOString().split('T')[0]
	bookingData.value.checkOutDate = getNextDay(bookingData.value.checkInDate)
	calculateNights()
})
</script>

<style>
.container {
	padding-bottom: 120rpx;
	background: #f8f9fa;
}

.nav-header {
	display: flex;
	justify-content: space-between;
	align-items: center;
	flex-direction: row;
	padding: 30rpx;
	background: #fff;
	border-bottom: 1rpx solid #eee;
}

.nav-title {
	font-size: 32rpx;
	font-weight: bold;
	color: #333;
}

.hotel-card {
	background: #fff;
	margin: 20rpx;
	border-radius: 16rpx;
	padding: 24rpx;
	display: flex;
	gap: 20rpx;
}

.hotel-image {
	width: 160rpx;
	height: 120rpx;
	border-radius: 12rpx;
}

.hotel-info {
	flex: 1;
}

.hotel-name {
	font-size: 28rpx;
	font-weight: bold;
	color: #333;
	display: block;
	margin-bottom: 8rpx;
}

.room-type {
	font-size: 24rpx;
	color: #666;
	display: block;
	margin-bottom: 12rpx;
}

.hotel-price {
	font-size: 28rpx;
	color: #FF6B00;
	font-weight: bold;
}

.unit {
	font-size: 22rpx;
	color: #999;
}

.booking-form {
	margin: 20rpx;
}

.form-section {
	background: #fff;
	border-radius: 16rpx;
	padding: 30rpx;
	margin-bottom: 20rpx;
}

.section-title {
	font-size: 32rpx;
	font-weight: bold;
	color: #333;
	display: block;
	margin-bottom: 30rpx;
}

.form-group {
	display: flex;
	align-items: center;
	justify-content: space-between;
	flex-direction: row;
	margin-bottom: 30rpx;
}

.form-label {
	font-size: 28rpx;
	color: #333;
	min-width: 120rpx;
}

.form-input {
	flex: 1;
	background: #f8f9fa;
	border-radius: 12rpx;
	padding: 20rpx 24rpx;
	font-size: 28rpx;
	color: #333;
	display: flex;
	align-items: center;
	justify-content: space-between;
	flex-direction: row;
}

.guest-selector {
	display: flex;
	align-items: center;
	flex-direction: row;
	gap: 20rpx;
}

.count-btn {
	width: 60rpx;
	height: 60rpx;
	border-radius: 50%;
	background: #4A90E2;
	color: #fff;
	font-size: 24rpx;
	font-weight: bold;
}

.count-btn:disabled {
	background: #ccc;
}

.guest-count {
	font-size: 28rpx;
	color: #333;
	min-width: 80rpx;
	text-align: center;
}

.price-detail {
	border-top: 1rpx solid #eee;
	padding-top: 20rpx;
}

.price-item {
	display: flex;
	justify-content: space-between;
	align-items: center;
	flex-direction: row;
	margin-bottom: 20rpx;
	font-size: 26rpx;
	color: #666;
}

.price-item.total {
	border-top: 1rpx solid #eee;
	padding-top: 20rpx;
	margin-top: 20rpx;
	font-weight: bold;
}

.total-price {
	font-size: 32rpx;
	color: #FF6B00;
}

.action-bar {
	position: fixed;
	bottom: 0;
	left: 0;
	right: 0;
	background: #fff;
	padding: 20rpx 30rpx;
	border-top: 1rpx solid #eee;
	display: flex;
	align-items: center;
	justify-content: space-between;
	flex-direction: row;
}

.price-summary {
	display: flex;
	flex-direction: row;
	align-items: baseline;
}

.total-label {
	font-size: 28rpx;
	color: #666;
	margin-right: 12rpx;
}

.total-amount {
	font-size: 36rpx;
	color: #FF6B00;
	font-weight: bold;
}

.confirm-btn {
	background: #4A90E2;
	color: #fff;
	border-radius: 40rpx;
	padding: 20rpx 40rpx;
	font-size: 28rpx;
	font-weight: bold;
}

.confirm-btn:disabled {
	background: #ccc;
}

.payment-popup {
	background: #fff;
	border-radius: 20rpx;
	padding: 40rpx;
}

.popup-title {
	font-size: 32rpx;
	font-weight: bold;
	color: #333;
	display: block;
	text-align: center;
	margin-bottom: 40rpx;
}

.payment-options {
	margin-bottom: 40rpx;
}

.payment-option {
	display: flex;
	align-items: center;
	justify-content: space-between;
	padding: 24rpx;
	border: 2rpx solid #eee;
	border-radius: 12rpx;
	margin-bottom: 20rpx;
}

.payment-option text {
	flex: 1;
	margin-left: 20rpx;
	font-size: 28rpx;
	color: #333;
}

.pay-btn {
	background: #4A90E2;
	color: #fff;
	border-radius: 12rpx;
	padding: 24rpx;
	font-size: 28rpx;
	font-weight: bold;
}
</style>