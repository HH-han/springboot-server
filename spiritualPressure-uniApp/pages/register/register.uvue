<template>
	<view class="container">
		<!-- 顶部导航 -->
		<view class="nav-header">
			<uni-icons type="arrow-left" size="28" color="#333" @click="goBack"></uni-icons>
			<text class="nav-title">用户注册</text>
			<view style="width: 28rpx"></view>
		</view>

		<!-- 注册表单 -->
		<view class="form-section">
			<view class="form-container">
				<view class="form-header">
					<text class="form-subtitle">创建您的账号</text>
					<text class="form-desc">加入SpiritualPressure，开启精彩旅程</text>
				</view>

				<view class="form-group">
					<uni-icons class="input-icon" type="person" size="24" color="#4A90E2"></uni-icons>
					<input 
						class="form-input" 
						v-model="form.phone" 
						type="number" 
						placeholder="请输入手机号" 
						placeholder-class="placeholder"
						maxlength="11"
						@blur="validatePhone"
					/>
				</view>

				<view class="form-group verify-group">
					<uni-icons class="input-icon" type="chat" size="24" color="#4A90E2"></uni-icons>
					<input 
						class="form-input" 
						v-model="form.verifyCode" 
						type="number" 
						placeholder="请输入验证码" 
						placeholder-class="placeholder"
						maxlength="6"
					/>
					<button 
						class="verify-btn" 
						:class="{ disabled: !canSendVerifyCode || countdown > 0 }"
						@click="sendVerifyCode"
					>
						<text v-if="countdown > 0">{{ countdown }}s后重发</text>
						<text v-else>获取验证码</text>
					</button>
				</view>

				<view class="form-group">
					<uni-icons class="input-icon" type="locked" size="24" color="#4A90E2"></uni-icons>
					<input 
						class="form-input" 
						v-model="form.password" 
						:password="!showPassword" 
						placeholder="请设置密码（6-20位）" 
						placeholder-class="placeholder"
						maxlength="20"
					/>
					<uni-icons 
						class="password-toggle" 
						:type="showPassword ? 'eye' : 'eye-slash'" 
						size="20" 
						color="#999"
						@click="showPassword = !showPassword"
					></uni-icons>
				</view>

				<view class="form-group">
					<uni-icons class="input-icon" type="locked" size="24" color="#4A90E2"></uni-icons>
					<input 
						class="form-input" 
						v-model="form.confirmPassword" 
						:password="!showConfirmPassword" 
						placeholder="请确认密码" 
						placeholder-class="placeholder"
						maxlength="20"
					/>
					<uni-icons 
						class="password-toggle" 
						:type="showConfirmPassword ? 'eye' : 'eye-slash'" 
						size="20" 
						color="#999"
						@click="showConfirmPassword = !showConfirmPassword"
					></uni-icons>
				</view>

				<view class="agreement">
					<label class="agreement-check">
						<checkbox :checked="agreed" @change="agreed = !agreed" color="#4A90E2" />
						<text>我已阅读并同意</text>
					</label>
					<text class="agreement-link" @click="navigateToAgreement">《用户协议》</text>
					<text>和</text>
					<text class="agreement-link" @click="navigateToPrivacy">《隐私政策》</text>
				</view>

				<button class="register-btn" :class="{ disabled: !canRegister }" @click="handleRegister">
					<text v-if="loading" class="loading-text">
						<uni-icons type="spinner-cycle" size="20" color="#fff"></uni-icons>
						注册中...
					</text>
					<text v-else>立即注册</text>
				</button>

				<view class="login-tip">
					<text>已有账号？</text>
					<text class="login-link" @click="navigateToLogin">立即登录</text>
				</view>
			</view>
		</view>
	</view>
</template>

<script setup>
import { ref, computed } from 'vue'

const form = ref({
	phone: '',
	verifyCode: '',
	password: '',
	confirmPassword: ''
})
const showPassword = ref(false)
const showConfirmPassword = ref(false)
const agreed = ref(false)
const loading = ref(false)
const countdown = ref(0)
const canSendVerifyCode = ref(false)

const canRegister = computed(() => {
	return (
		form.value.phone &&
		form.value.verifyCode &&
		form.value.password &&
		form.value.confirmPassword &&
		agreed.value &&
		!loading.value
	)
})

const goBack = () => {
	uni.navigateBack()
}

const validatePhone = () => {
	if (form.value.phone && !/^1[3-9]\d{9}$/.test(form.value.phone)) {
		uni.showToast({ title: '手机号格式不正确', icon: 'none' })
		canSendVerifyCode.value = false
		return false
	}
	canSendVerifyCode.value = !!form.value.phone
	return true
}

const sendVerifyCode = () => {
	if (!validatePhone()) {
		return
	}

	// 开始倒计时
	countdown.value = 60
	const timer = setInterval(() => {
		if (countdown.value <= 0) {
			clearInterval(timer)
			return
		}
		countdown.value--
	}, 1000)

	// 模拟发送验证码
	uni.showToast({ title: '验证码已发送', icon: 'success' })
	
	// 这里应该是调用API发送验证码
	console.log('发送验证码到:', form.value.phone)
}

const handleRegister = () => {
	if (!validateForm()) {
		return
	}

	loading.value = true
	
	// 模拟注册请求
	setTimeout(() => {
		loading.value = false
		
		// 注册成功
		uni.showToast({ title: '注册成功', icon: 'success' })
		
		// 自动登录
		uni.setStorageSync('token', 'mock_token_' + Date.now())
		uni.setStorageSync('userInfo', {
			name: '用户' + form.value.phone.slice(-4),
			phone: form.value.phone,
			level: 1
		})
		
		// 跳转到首页
		setTimeout(() => {
			uni.reLaunch({ url: '/pages/index/index' })
		}, 1500)
		
	}, 2000)
}

const validateForm = () => {
	if (!form.value.phone) {
		uni.showToast({ title: '请输入手机号', icon: 'none' })
		return false
	}
	
	if (!/^1[3-9]\d{9}$/.test(form.value.phone)) {
		uni.showToast({ title: '手机号格式不正确', icon: 'none' })
		return false
	}
	
	if (!form.value.verifyCode) {
		uni.showToast({ title: '请输入验证码', icon: 'none' })
		return false
	}
	
	if (!form.value.password) {
		uni.showToast({ title: '请输入密码', icon: 'none' })
		return false
	}
	
	if (form.value.password.length < 6) {
		uni.showToast({ title: '密码长度至少6位', icon: 'none' })
		return false
	}
	
	if (!form.value.confirmPassword) {
		uni.showToast({ title: '请确认密码', icon: 'none' })
		return false
	}
	
	if (form.value.password !== form.value.confirmPassword) {
		uni.showToast({ title: '两次输入的密码不一致', icon: 'none' })
		return false
	}
	
	if (!agreed.value) {
		uni.showToast({ title: '请阅读并同意用户协议', icon: 'none' })
		return false
	}
	
	return true
}

const navigateToLogin = () => {
	uni.navigateTo({ url: '/pages/login/login' })
}

const navigateToAgreement = () => {
	uni.navigateTo({ url: '/pages/agreement/agreement' })
}

const navigateToPrivacy = () => {
	uni.navigateTo({ url: '/pages/privacy/privacy' })
}
</script>

<style>
.container {
	min-height: 100vh;
	background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
}

.nav-header {
	display: flex;
	justify-content: space-between;
	align-items: center;
	flex-direction: row;
	padding: 40rpx 32rpx 20rpx;
	background: transparent;
}

.nav-title {
	font-size: 36rpx;
	font-weight: bold;
	color: #fff;
}

.form-section {
	background: #fff;
	border-radius: 40rpx 40rpx 0 0;
	padding: 40rpx 32rpx 60rpx;
	min-height: calc(100vh - 120rpx);
	margin: 60rpx 10rpx 0 10rpx;
	box-shadow: 0 -4rpx 20rpx rgba(0, 0, 0, 0.1);
}

.form-container {
	max-width: 600rpx;
	margin: 0 auto;
}

.form-header {
	text-align: center;
	margin-bottom: 60rpx;
}

.form-subtitle {
	display: block;
	font-size: 36rpx;
	font-weight: bold;
	color: #333;
	margin-bottom: 12rpx;
}

.form-desc {
	display: block;
	font-size: 28rpx;
	color: #666;
}

.form-group {
	position: relative;
	margin-bottom: 40rpx;
	border: 2rpx solid #e8e8e8;
	border-radius: 16rpx;
	padding: 28rpx 32rpx;
	display: flex;
	align-items: center;
	flex-direction: row;
	background: #fafafa;
	transition: all 0.3s ease;
}

.form-group:focus-within {
	border-color: #4A90E2;
	background: #fff;
	box-shadow: 0 4rpx 16rpx rgba(74, 144, 226, 0.15);
	transform: translateY(-2rpx);
}

.verify-group {
	padding-right: 200rpx;
}

.input-icon {
	margin-right: 20rpx;
}

.form-input {
	flex: 1;
	font-size: 30rpx;
	color: #333;
	background: transparent;
}

.placeholder {
	color: #aaa;
}

.password-toggle {
	margin-left: 20rpx;
	cursor: pointer;
}

.verify-btn {
	position: absolute;
	right: 16rpx;
	top: 50%;
	transform: translateY(-50%);
	background: linear-gradient(135deg, #4A90E2, #6B8EFF);
	color: #fff;
	border-radius: 12rpx;
	padding: 16rpx 24rpx;
	font-size: 24rpx;
	font-weight: 500;
	border: none;
	box-shadow: 0 4rpx 12rpx rgba(74, 144, 226, 0.3);
	transition: all 0.3s ease;
}

.verify-btn:not(.disabled):active {
	transform: translateY(-50%) scale(0.95);
	box-shadow: 0 2rpx 6rpx rgba(74, 144, 226, 0.2);
}

.verify-btn.disabled {
	background: #ccc;
	box-shadow: none;
}

.agreement {
	display: flex;
	align-items: center;
	flex-direction: row;
	overflow-x: auto;
	margin-bottom: 50rpx;
	font-size: 26rpx;
	color: #666;
scrollbar-width: none;        /* Firefox: 隐藏滚动条轨道 */
  -ms-overflow-style: none;     /* IE 10+ */
}
.agreement::-webkit-scrollbar {
  display: none;                /* Chrome, Safari, Opera */
}
.agreement-check {
	display: flex;
	align-items: center;
	flex-direction: row;
	margin-right: 8rpx;
}

.agreement-check checkbox {
	transform: scale(0.9);
	margin-right: 8rpx;
}

.agreement-link {
	color: #4A90E2;
	font-weight: 500;
	margin: 0 4rpx;
}

.register-btn {
	background: linear-gradient(135deg, #4A90E2, #6B8EFF);
	color: #fff;
	border-radius: 16rpx;
	padding: 32rpx;
	font-size: 34rpx;
	font-weight: bold;
	margin-bottom: 40rpx;
	border: none;
	box-shadow: 0 6rpx 20rpx rgba(74, 144, 226, 0.3);
	transition: all 0.3s ease;
}

.register-btn:not(.disabled):active {
	transform: translateY(2rpx);
	box-shadow: 0 2rpx 8rpx rgba(74, 144, 226, 0.2);
}

.register-btn.disabled {
	background: #ccc;
	box-shadow: none;
}

.loading-text {
	display: flex;
	align-items: center;
	justify-content: center;
	gap: 12rpx;
}

.login-tip {
	text-align: center;
	font-size: 28rpx;
	color: #666;
	display: flex;
    flex-direction: row;
    justify-content: space-between;
}

.login-link {
	color: #4A90E2;
	font-weight: bold;
	margin-left: 12rpx;
}
</style>