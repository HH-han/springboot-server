<template>
	<view class="container">
		<!-- 顶部背景 -->
		<view class="header-section">
			<view class="header-content">
				<image class="logo" src="/static/logo.png" mode="aspectFit"></image>
				<text class="welcome-text">欢迎登录SpiritualPressure</text>
				<text class="subtitle">开启您的精彩旅程</text>
			</view>
		</view>

		<!-- 登录表单 -->
		<view class="form-section">
			<view class="form-container">
				<view class="form-header">
					<text class="form-title">账号登录</text>
				</view>

				<view class="form-group">
					<uni-icons class="input-icon" type="person" size="24" color="#4A90E2"></uni-icons>
					<input 
						class="form-input" 
						v-model="form.username" 
						type="text" 
						placeholder="请输入用户名" 
						placeholder-class="placeholder"
						maxlength="20"
					/>
				</view>

				<view class="form-group">
					<uni-icons class="input-icon" type="locked" size="24" color="#4A90E2"></uni-icons>
					<input 
						class="form-input" 
						v-model="form.password" 
						:password="!showPassword" 
						placeholder="请输入密码" 
						placeholder-class="placeholder"
					/>
					<uni-icons 
						class="password-toggle" 
						:type="showPassword ? 'eye' : 'eye-slash'" 
						size="20" 
						color="#999"
						@click="showPassword = !showPassword"
					></uni-icons>
				</view>

				<view class="form-options">
					<label class="remember-me">
						<checkbox :checked="rememberMe" @change="rememberMe = !rememberMe" color="#4A90E2" />
						<text>记住密码</text>
					</label>
					<text class="forgot-password" @click="navigateToForgot">忘记密码？</text>
				</view>

				<button class="login-btn" :class="{ disabled: !form.username || !form.password }" @click="handleLogin">
					<text v-if="loading" class="loading-text">
						<uni-icons type="spinner-cycle" size="20" color="#fff"></uni-icons>
						登录中...
					</text>
					<text v-else>登录</text>
				</button>

				<view class="register-tip">
					<text>还没有账号？</text>
					<text class="register-link" @click="navigateToRegister">立即注册</text>
				</view>

				<!-- 第三方登录 -->
				<view class="social-login">
					<view class="divider">
						<view class="divider-line"></view>
						<text class="divider-text">或使用其他方式登录</text>
						<view class="divider-line"></view>
					</view>
					<view class="social-buttons">
						<button class="social-btn wechat" @click="wechatLogin">
							<img src="/static/app/wechat.png" mode="aspectFit" />
							<text>微信</text>
						</button>
						<button class="social-btn qq" @click="qqLogin">
							<img src="/static/app/qq.png" mode="aspectFit" />
							<text>QQ</text>
						</button>
					</view>
				</view>
			</view>
		</view>
	</view>
</template>

<script setup>
import { ref } from 'vue'
import { userApi } from '../../api/index.js'

const form = ref({
	username: '',
	password: ''
})

const showPassword = ref(false)
const rememberMe = ref(false)
const loading = ref(false)

const handleLogin = async () => {
	if (!validateForm()) {
		return
	}

	loading.value = true
	
	try {
		// 调用真实登录API
		const response = await userApi.login({
			username: form.value.username,
			password: form.value.password
		})
		
		if (response && (response.code === 0 || response.code === "0")) {
			// 登录成功，保存token和用户信息
			const token = response.data?.token || response.token
			const userInfo = response.data?.userInfo || response.data?.user || response.user
			
			if (token) {
				uni.setStorageSync('token', token)
			}
			
			if (userInfo) {
				uni.setStorageSync('userInfo', userInfo)
			}
			
			// 如果记住密码，保存用户名
			if (rememberMe.value) {
				uni.setStorageSync('rememberedUsername', form.value.username)
			} else {
				uni.removeStorageSync('rememberedUsername')
			}
			
			uni.showToast({ title: '登录成功', icon: 'success' })
			
			// 跳转到首页
			setTimeout(() => {
				uni.reLaunch({ url: '/pages/index/index' })
			}, 1500)
			
		} else {
			// 登录失败
			const errorMsg = response?.msg || response?.message || '登录失败，请重试'
			uni.showToast({ title: errorMsg, icon: 'none' })
		}
		
	} catch (error) {
		console.error('登录请求失败:', error)
		uni.showToast({ 
			title: error.message || '网络错误，请检查网络连接', 
			icon: 'none' 
		})
	} finally {
		loading.value = false
	}
}

const validateForm = () => {
	if (!form.value.username) {
		uni.showToast({ title: '请输入用户名', icon: 'none' })
		return false
	}
	
	if (!form.value.password) {
		uni.showToast({ title: '请输入密码', icon: 'none' })
		return false
	}
	
	if (form.value.password.length < 6) {
		uni.showToast({ title: '密码长度至少6位', icon: 'none' })
		return false
	}
	
	return true
}

// 页面加载时检查是否有记住的用户名
const checkRememberedUsername = () => {
	const rememberedUsername = uni.getStorageSync('rememberedUsername')
	if (rememberedUsername) {
		form.value.username = rememberedUsername
		rememberMe.value = true
	}
}

// 调用检查记住的用户名
checkRememberedUsername()

const navigateToRegister = () => {
	uni.navigateTo({ url: '/pages/register/register' })
}

const navigateToForgot = () => {
	uni.showToast({ title: '忘记密码功能开发中', icon: 'none' })
}

const wechatLogin = () => {
	uni.showToast({ title: '微信登录功能开发中', icon: 'none' })
}

const qqLogin = () => {
	uni.showToast({ title: 'QQ登录功能开发中', icon: 'none' })
}
</script>

<style>
.container {
	min-height: 100vh;
	background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
}

.header-section {
	padding: 120rpx 40rpx 80rpx;
	text-align: center;
}

.header-content {
	display: flex;
	flex-direction: column;
	align-items: center;
}

.logo {
	width: 140rpx;
	height: 140rpx;
	margin-bottom: 30rpx;
	border-radius: 28rpx;
	box-shadow: 0 8rpx 24rpx rgba(0, 0, 0, 0.15);
}

.welcome-text {
	font-size: 44rpx;
	font-weight: bold;
	color: #fff;
	margin-bottom: 12rpx;
	text-shadow: 0 2rpx 8rpx rgba(0, 0, 0, 0.2);
}

.subtitle {
	font-size: 28rpx;
	color: rgba(255, 255, 255, 0.8);
}

.form-section {
	background: #fff;
	border-radius: 40rpx;
	padding: 60rpx 40rpx 80rpx;
	margin: 0 10rpx 0 10rpx; 
	min-height: 60vh;
	box-shadow: 0 -4rpx 20rpx rgba(0, 0, 0, 0.1);
}

.form-container {
	max-width: 600rpx;
	margin: 0 auto;
}

.form-header {
	text-align: center;
	margin-bottom: 60rpx;
}

.form-title {
	font-size: 36rpx;
	font-weight: bold;
	color: #333;
}

.form-group {
	position: relative;
	margin-bottom: 40rpx;
	border: 2rpx solid #e8e8e8;
	border-radius: 16rpx;
	padding: 28rpx 32rpx;
	display: flex;
	align-items: center;
	flex-direction: row;
	background: #fafafa;
	transition: all 0.3s ease;
}

.form-group:focus-within {
	border-color: #4A90E2;
	background: #fff;
	box-shadow: 0 4rpx 16rpx rgba(74, 144, 226, 0.15);
	transform: translateY(-2rpx);
}

.input-icon {
	margin-right: 20rpx;
}

.form-input {
	flex: 1;
	font-size: 30rpx;
	color: #333;
	background: transparent;
}

.placeholder {
	color: #aaa;
}

.password-toggle {
	margin-left: 20rpx;
	cursor: pointer;
}

.form-options {
	display: flex;
	flex-direction: row;
	justify-content: space-between;
	align-items: center;
	margin-bottom: 50rpx;
}

.remember-me {
	display: flex;
	align-items: center;
	flex-direction: row;
	font-size: 26rpx;
	color: #666;
}

.remember-me checkbox {
	transform: scale(0.9);
	margin-right: 12rpx;
}

.forgot-password {
	font-size: 26rpx;
	color: #4A90E2;
	font-weight: 500;
}

.login-btn {
	background: linear-gradient(135deg, #4A90E2, #6B8EFF);
	color: #fff;
	border-radius: 16rpx;
	padding: 1rpx;
	font-size: 34rpx;
	font-weight: bold;
	margin-bottom: 40rpx;
	border: none;
	box-shadow: 0 6rpx 20rpx rgba(74, 144, 226, 0.3);
	transition: all 0.3s ease;
}

.login-btn:not(.disabled):active {
	transform: translateY(2rpx);
	box-shadow: 0 2rpx 8rpx rgba(74, 144, 226, 0.2);
}

.login-btn.disabled {
	background: #ccc;
	box-shadow: none;
}

.loading-text {
	display: flex;
	align-items: center;
	justify-content: center;
	gap: 12rpx;
}

.register-tip {
	text-align: center;
	font-size: 28rpx;
	color: #666;
	margin-bottom: 50rpx;
	display: flex;
    flex-direction: row;
    justify-content: space-between;
}

.register-link {
	color: #4A90E2;
	font-weight: bold;
	margin-left: 12rpx;
}

.social-login {
	margin-top: 60rpx;
}

.divider {
	display: flex;
	align-items: center;
	margin-bottom: 40rpx;
}

.divider-line {
	flex: 1;
	height: 1rpx;
	background: #e8e8e8;
}

.divider-text {
	padding: 0 20rpx;
	font-size: 24rpx;
	color: #999;
}

.social-buttons {
	display: flex;
	justify-content: center;
	flex-direction: row;
	gap: 60rpx;
}

.social-btn {
	display: flex;
	align-items: center;
	flex-direction: row;
	padding: 24rpx 32rpx;
	border: 2rpx solid #f0f0f0;
	border-radius: 16rpx;
	background: #fff;
	transition: all 0.3s ease;
	gap: 15rpx;
}

.social-btn img{
	width: 28rpx;
	height: 28rpx;
}
.social-btn:active {
	transform: translateY(2rpx);
	box-shadow: 0 4rpx 12rpx rgba(0, 0, 0, 0.1);
}

.social-btn.wechat:active {
	background: #f0f9eb;
	border-color: #07C160;
}

.social-btn.qq:active {
	background: #e6f7ff;
	border-color: #12B7F5;
}

.social-btn text {
	font-size: 26rpx;
	color: #666;
}
</style>