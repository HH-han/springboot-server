<template>
	<view class="container">
		<!-- 顶部导航 -->
		<view class="nav-header">
			<uni-icons type="arrow-left" size="28" color="#333" @click="goBack"></uni-icons>
			<text class="nav-title">编辑资料</text>
			<view style="width: 28rpx"></view>
		</view>

		<scroll-view class="content" scroll-y="true">
			<!-- 头像上传 -->
			<view class="avatar-section">
				<text class="section-title">头像</text>
				<view class="avatar-upload" @click="chooseAvatar">
					<image class="avatar" :src="formData.avatar" mode="aspectFill"></image>
					<view class="upload-mask">
						<uni-icons type="camera" size="24" color="#fff"></uni-icons>
						<text class="upload-text">更换头像</text>
					</view>
				</view>
			</view>

			<!-- 基本信息 -->
			<view class="form-section">
				<text class="section-title">基本信息</text>
				
				<view class="form-item">
					<text class="label">昵称:</text>
					<input 
						class="input" 
						v-model="formData.nickname" 
						placeholder="请输入昵称"
						maxlength="20"
					/>
				</view>

				<view class="form-item">
					<text class="label">性别:</text>
					<picker 
						mode="selector" 
						:range="genderOptions" 
						:value="genderIndex"
						@change="onGenderChange"
					>
						<view class="picker">
							<text class="picker-text">{{ formData.gender ? genderOptions[genderIndex] : '请选择性别' }}</text>
							<uni-icons type="arrow-down" size="16" color="#999"></uni-icons>
						</view>
					</picker>
				</view>

				<view class="form-item">
					<text class="label">生日:</text>
					<picker 
						mode="date" 
						:value="formData.birthday"
						@change="onBirthdayChange"
					>
						<view class="picker">
							<text class="picker-text">{{ formData.birthday || '请选择生日' }}</text>
							<uni-icons type="arrow-down" size="16" color="#999"></uni-icons>
						</view>
					</picker>
				</view>

				<view class="form-item">
					<text class="label">个性签名:</text>
					<textarea 
						class="textarea" 
						v-model="formData.signature" 
						placeholder="请输入个性签名"
						maxlength="50"
					/>
				</view>
			</view>

			<!-- 联系方式 -->
			<view class="form-section">
				<text class="section-title">联系方式:</text>
				
				<view class="form-item">
					<text class="label">手机号码:</text>
					<input 
						class="input" 
						v-model="formData.phone" 
						placeholder="请输入手机号码"
						type="number"
						maxlength="11"
					/>
				</view>

				<view class="form-item">
					<text class="label">邮箱:</text>
					<input 
						class="input" 
						v-model="formData.email" 
						placeholder="请输入邮箱"
						type="email"
					/>
				</view>
			</view>

			<!-- 保存按钮 -->
			<view class="action-buttons">
				<button class="save-btn" @click="submitForm">保存修改</button>
			</view>
		</scroll-view>
	</view>
</template>

<script setup>
import { ref, computed, onMounted } from 'vue'
import { onLoad } from '@dcloudio/uni-app'

const formData = ref({
	avatar: '/static/logo.png',
	nickname: '',
	gender: '',
	birthday: '',
	signature: '',
	phone: '',
	email: ''
})

const genderOptions = ['男', '女', '保密']

const genderIndex = computed(() => {
	if (formData.value.gender === '男') return 0
	if (formData.value.gender === '女') return 1
	if (formData.value.gender === '保密') return 2
	return -1
})

const goBack = () => {
	uni.navigateBack()
}

const chooseAvatar = () => {
	uni.chooseImage({
		count: 1,
		sizeType: ['compressed'],
		sourceType: ['album', 'camera'],
		success: (res) => {
			const tempFilePaths = res.tempFilePaths
			formData.value.avatar = tempFilePaths[0]
			uni.showToast({ title: '头像选择成功', icon: 'success' })
		}
	})
}

const onGenderChange = (e) => {
	const index = e.detail.value
	formData.value.gender = genderOptions[index]
}

const onBirthdayChange = (e) => {
	formData.value.birthday = e.detail.value
}

const submitForm = () => {
	if (!formData.value.nickname) {
		uni.showToast({ title: '请输入昵称', icon: 'none' })
		return
	}

	if (formData.value.phone && !/^1[3-9]\d{9}$/.test(formData.value.phone)) {
		uni.showToast({ title: '请输入正确的手机号码', icon: 'none' })
		return
	}

	if (formData.value.email && !/^\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$/.test(formData.value.email)) {
		uni.showToast({ title: '请输入正确的邮箱格式', icon: 'none' })
		return
	}

	// 模拟保存数据
	uni.showLoading({ title: '保存中...' })
	setTimeout(() => {
		uni.hideLoading()
		uni.showToast({ title: '保存成功', icon: 'success' })
		
		// 通知用户页面更新
		uni.$emit('profileUpdated', formData.value)
		
		// 返回上一页
		setTimeout(() => {
			uni.navigateBack()
		}, 1500)
	}, 1000)
}

// 加载用户数据
const loadUserData = () => {
	// 模拟从本地存储或API获取用户数据
	const userData = uni.getStorageSync('userInfo') || {}
	formData.value = { ...formData.value, ...userData }
}

onMounted(() => {
	loadUserData()
})

onLoad(() => {
	// 页面加载时获取用户数据
	loadUserData()
})
</script>

<style>
.container {
	min-height: 100vh;
	background: #f8f9fa;
}

.nav-header {
	display: flex;
	justify-content: space-between;
	align-items: center;
	flex-direction: row;
	padding: 40rpx 32rpx;
	background: #fff;
	border-bottom: 1rpx solid #eee;
	position: sticky;
	top: 0;
	z-index: 10;
}

.nav-title {
	font-size: 36rpx;
	font-weight: bold;
	color: #333;
}

.content {
	height: calc(100vh - 120rpx);
	padding: 20rpx 32rpx;
}

.section-title {
	font-size: 32rpx;
	font-weight: bold;
	color: #333;
	display: block;
	margin-bottom: 24rpx;
}

.avatar-section {
	background: #fff;
	border-radius: 16rpx;
	padding: 30rpx;
	margin-bottom: 20rpx;
	box-shadow: 0 2rpx 8rpx rgba(0, 0, 0, 0.1);
}

.avatar-upload {
	position: relative;
	width: 120rpx;
	height: 120rpx;
	border-radius: 50%;
	overflow: hidden;
}

.avatar {
	width: 100%;
	height: 100%;
}

.upload-mask {
	position: absolute;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	background: rgba(0, 0, 0, 0.5);
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: center;
	opacity: 0;
	transition: opacity 0.3s;
}

.avatar-upload:hover .upload-mask {
	opacity: 1;
}

.upload-text {
	font-size: 20rpx;
	color: #fff;
	margin-top: 8rpx;
}

.form-section {
	background: #fff;
	border-radius: 16rpx;
	padding: 30rpx;
	margin-bottom: 20rpx;
	box-shadow: 0 2rpx 8rpx rgba(0, 0, 0, 0.1);
}

.form-item {
	display: flex;
	justify-content: space-between;
	align-items: flex-start;
	flex-direction: row;
	padding: 24rpx 0;
	border-bottom: 1rpx solid #f5f5f5;
}

.form-item:last-child {
	border-bottom: none;
}

.label {
	font-size: 28rpx;
	color: #333;
	font-weight: 500;
	min-width: 120rpx;
}

.input, .textarea {
	flex: 1;
	text-align: right;
	font-size: 28rpx;
	color: #333;
	border: none;
	outline: none;
	background: transparent;
}

.textarea {
	text-align: right;
	height: 80rpx;
	resize: none;
}

.picker {
	flex: 1;
	display: flex;
	justify-content: flex-end;
	align-items: center;
	flex-direction: row;
	gap: 12rpx;
}

.picker-text {
	font-size: 28rpx;
	color: #333;
}

.picker-text:empty::before {
	content: '请选择';
	color: #999;
}

.action-buttons {
	margin: 40rpx 0;
}

.save-btn {
	background: #4A90E2;
	color: #fff;
	padding: 24rpx;
	border-radius: 12rpx;
	font-size: 32rpx;
	border: none;
}

.save-btn:active {
	opacity: 0.8;
}
</style>