<template>
	<view class="container">
		<!-- 用户信息卡片 -->
		<view class="user-card">
			<view class="user-avatar">
				<image class="avatar" :src="userInfo.image || '/static/avatar.png'" mode="aspectFill"></image>
				<uni-icons 
					class="edit-icon" 
					type="compose" 
					size="20" 
					color="#fff"
					@click="editProfile"
				></uni-icons>
			</view>
			<view class="user-info">
				<text class="user-name">{{ userInfo.nickname || userInfo.username || '用户' }}</text>
				<text class="user-level" v-if="userInfo.level">VIP{{ userInfo.level }}</text>
				<text class="user-phone">{{ userInfo.phone || userInfo.email || '未设置联系方式' }}</text>
			</view>
		</view>

		<!-- 功能菜单 -->
		<view class="menu-section">
			<text class="section-title">我的服务</text>
			<view class="menu-grid">
				<view class="menu-item" @click="navigateTo('/pages/order/order')">
					<uni-icons type="list" size="32" color="#4A90E2"></uni-icons>
					<text>我的订单</text>
				</view>
				<view class="menu-item" @click="navigateTo('/pages/collection/collection')">
					<uni-icons type="heart" size="32" color="#FF6B6B"></uni-icons>
					<text>我的收藏</text>
				</view>
				<view class="menu-item" @click="navigateTo('/pages/coupon/coupon')">
					<uni-icons type="gift-filled" size="32" color="#FFB800"></uni-icons>
					<text>优惠券</text>
				</view>
				<view class="menu-item" @click="navigateTo('/pages/address/address')">
					<uni-icons type="location" size="32" color="#52C41A"></uni-icons>
					<text>收货地址</text>
				</view>
			</view>
		</view>

		<!-- 设置菜单 -->
		<view class="menu-section">
			<text class="section-title">账户设置</text>
			<view class="menu-list">
				<view class="menu-row" @click="navigateTo('/pages/setting/setting')">
					<uni-icons type="gear" size="24" color="#666"></uni-icons>
					<text>系统设置</text>
					<uni-icons type="forward" size="20" color="#ccc"></uni-icons>
				</view>
				<view class="menu-row" @click="navigateTo('/pages/security/security')">
					<uni-icons type="locked" size="24" color="#666"></uni-icons>
					<text>安全中心</text>
					<uni-icons type="forward" size="20" color="#ccc"></uni-icons>
				</view>
				<view class="menu-row" @click="navigateTo('/pages/help/help')">
					<uni-icons type="help" size="24" color="#666"></uni-icons>
					<text>帮助中心</text>
					<uni-icons type="forward" size="20" color="#ccc"></uni-icons>
				</view>
				<view class="menu-row" @click="contactCustomerService">
					<uni-icons type="phone" size="24" color="#666"></uni-icons>
					<text>联系客服</text>
					<uni-icons type="forward" size="20" color="#ccc"></uni-icons>
				</view>
			</view>
		</view>

		<!-- 退出登录 -->
		<view class="logout-section">
			<button class="logout-btn" @click="logout">退出登录</button>
		</view>
	</view>
</template>

<script setup>
import { ref, onMounted } from 'vue'
import { userApi } from '@/api/index.js'

// 用户信息
const userInfo = ref({})

// 获取用户信息
const fetchUserInfo = async () => {
	try {
		const response = await userApi.getInfo()
		if (response.data) {
			userInfo.value = response.data
			// 保存用户信息到本地存储
			uni.setStorageSync('userInfo', response.data)
		}
	} catch (error) {
		console.error('获取用户信息失败:', error)
		// 如果API调用失败，尝试从本地存储获取
		const cachedUserInfo = uni.getStorageSync('userInfo')
		if (cachedUserInfo) {
			userInfo.value = cachedUserInfo
		} else {
			// 设置默认用户信息
			userInfo.value = {
				nickname: '旅行者',
				level: 3,
				phone: '138****8888',
				avatar: '/static/avatar.png'
			}
		}
	}
}

const editProfile = () => {
	uni.navigateTo({
		url: '/pages/profile/edit'
	})
}

const navigateTo = (url) => {
	uni.navigateTo({ url })
}

const contactCustomerService = () => {
	uni.makePhoneCall({
		phoneNumber: '400-123-4567'
	})
}

const logout = () => {
	uni.showModal({
		title: '确认退出',
		content: '确定要退出登录吗？',
		success: (res) => {
			if (res.confirm) {
				uni.removeStorageSync('token')
				uni.removeStorageSync('userInfo')
				uni.showToast({ title: '退出成功', icon: 'success' })
				uni.reLaunch({ url: '/pages/login/login' })
			}
		}
	})
}

// 页面加载时获取用户信息
onMounted(() => {
	fetchUserInfo()
})
</script>

<style>
.container {
	padding: 20rpx;
	background-color: #f8f9fa;
	min-height: 100vh;
}

.user-card {
	background: linear-gradient(135deg, #4A90E2, #6B8EFF);
	border-radius: 20rpx;
	padding: 40rpx 30rpx;
	color: #fff;
	margin-bottom: 20rpx;
	position: relative;
}

.user-avatar {
	position: relative;
	width: 120rpx;
	height: 120rpx;
	margin-bottom: 20rpx;
}

.avatar {
	width: 100%;
	height: 100%;
	border-radius: 50%;
	border: 4rpx solid rgba(255, 255, 255, 0.3);
}

.edit-icon {
	position: absolute;
	right: 0;
	bottom: 0;
	background: #4A90E2;
	border-radius: 50%;
	padding: 8rpx;
}

.user-info {
	text-align: center;
}

.user-name {
	font-size: 36rpx;
	font-weight: bold;
	display: block;
	margin-bottom: 8rpx;
}

.user-level {
	font-size: 24rpx;
	background: rgba(255, 255, 255, 0.2);
	padding: 4rpx 16rpx;
	border-radius: 20rpx;
	display: inline-block;
	margin-bottom: 8rpx;
}

.user-phone {
	font-size: 28rpx;
	opacity: 0.9;
}

.menu-section {
	background: #fff;
	border-radius: 20rpx;
	padding: 30rpx;
	margin-bottom: 20rpx;
}

.section-title {
	font-size: 32rpx;
	font-weight: bold;
	color: #333;
	display: block;
	margin-bottom: 20rpx;
}

.menu-grid {
	display: grid;
	grid-template-columns: repeat(4, 1fr);
	gap: 20rpx;
}

.menu-item {
	display: flex;
	flex-direction: column;
	align-items: center;
	padding: 20rpx;
	border-radius: 12rpx;
	background: #f8f9fa;
}

.menu-item text {
	font-size: 24rpx;
	color: #666;
	margin-top: 12rpx;
}

.menu-list {
	background: #fff;
}

.menu-row {
	display: flex;
	align-items: center;
	flex-direction: row;
	padding: 30rpx 0;
	border-bottom: 1rpx solid #eee;
}

.menu-row:last-child {
	border-bottom: none;
}

.menu-row text {
	font-size: 28rpx;
	color: #333;
	margin-left: 20rpx;
}

.logout-section {
	margin: 40rpx 0;
}

.logout-btn {
	background: #fff;
	color: #FF6B6B;
	border: 1rpx solid #FF6B6B;
	border-radius: 12rpx;
	font-size: 28rpx;
}

.logout-btn:active {
	background: #FFF5F5;
}
</style>