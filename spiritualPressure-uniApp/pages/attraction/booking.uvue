<template>
	<view class="container">
		<!-- 顶部导航 -->
		<view class="nav-header">
			<uni-icons type="arrow-left" size="24" color="#333" @click="goBack"></uni-icons>
			<text class="nav-title">景点门票预订</text>
			<view style="width: 24rpx"></view>
		</view>

		<!-- 景点信息卡片 -->
		<view class="attraction-card">
			<image 
				class="attraction-image" 
				:src="bookingData.image || '/static/attraction/attraction' + bookingData.attractionId + '.jpg'" 
				mode="aspectFill" 
				v-if="bookingData.attractionId"
			/>
			<view class="attraction-info">
				<text class="attraction-name">{{ bookingData.attractionName || '景点名称' }}</text>
				<text class="ticket-type">成人票</text>
				<text class="attraction-price">¥{{ bookingData.price }} <text class="unit">/人</text></text>
			</view>
		</view>

		<!-- 预订表单 -->
		<view class="booking-form">
			<view class="form-section">
				<text class="section-title">预订信息</text>
				
				<!-- 游玩日期 -->
				<view class="form-group">
					<text class="form-label">游玩日期</text>
					<picker 
						mode="date" 
						:value="bookingData.visitDate" 
						@change="onVisitDateChange"
						:start="getToday()"
					>
						<view class="form-input">
							<text>{{ bookingData.visitDate }}</text>
							<uni-icons type="calendar" size="20" color="#999"></uni-icons>
						</view>
					</picker>
				</view>

				<!-- 门票数量 -->
				<view class="form-group">
					<text class="form-label">门票数量</text>
					<view class="ticket-selector">
						<button 
							class="count-btn" 
							:disabled="bookingData.ticketCount <= 1"
							@click="changeTicketCount(-1)"
						>-</button>
						<text class="ticket-count">{{ bookingData.ticketCount }} 张</text>
						<button 
							class="count-btn" 
							:disabled="bookingData.ticketCount >= 10"
							@click="changeTicketCount(1)"
						>+</button>
					</view>
				</view>

				<!-- 入园时间 -->
				<view class="form-group">
					<text class="form-label">入园时间</text>
					<picker 
						mode="time" 
						:value="bookingData.entryTime" 
						@change="onEntryTimeChange"
					>
						<view class="form-input">
							<text>{{ bookingData.entryTime }}</text>
							<uni-icons type="time" size="20" color="#999"></uni-icons>
						</view>
					</picker>
				</view>

				<!-- 联系人信息 -->
				<view class="form-group">
					<text class="form-label">联系人</text>
					<input 
						class="form-input" 
						v-model="bookingData.contactName" 
						placeholder="请输入联系人姓名"
					/>
				</view>

				<view class="form-group">
					<text class="form-label">手机号</text>
					<input 
						class="form-input" 
						v-model="bookingData.contactPhone" 
						type="number" 
						placeholder="请输入手机号码"
						maxlength="11"
					/>
				</view>
			</view>

			<!-- 价格明细 -->
			<view class="form-section">
				<text class="section-title">价格明细</text>
				<view class="price-detail">
					<view class="price-item">
						<text>门票 ({{ bookingData.ticketCount }}张)</text>
						<text>¥{{ totalTicketPrice }}</text>
					</view>
					<view class="price-item">
						<text>服务费</text>
						<text>¥{{ serviceFee }}</text>
					</view>
					<view class="price-item total">
						<text>总计</text>
						<text class="total-price">¥{{ totalPrice }}</text>
					</view>
				</view>
			</view>

			<!-- 预订须知 -->
			<view class="form-section">
				<text class="section-title">预订须知</text>
				<view class="notice-list">
					<view class="notice-item">
						<uni-icons type="info" size="20" color="#4A90E2"></uni-icons>
						<text>门票一经预订，不可退改</text>
					</view>
					<view class="notice-item">
						<uni-icons type="info" size="20" color="#4A90E2"></uni-icons>
						<text>请携带有效身份证件入园</text>
					</view>
					<view class="notice-item">
						<uni-icons type="info" size="20" color="#4A90E2"></uni-icons>
						<text>预订成功后，将发送电子票到手机</text>
					</view>
				</view>
			</view>
		</view>

		<!-- 底部操作栏 -->
		<view class="action-bar">
			<view class="price-summary">
				<text class="total-label">总计:</text>
				<text class="total-amount">¥{{ totalPrice }}</text>
			</view>
			<button class="confirm-btn" :disabled="!canSubmit" @click="handleSubmit">
				立即预订
			</button>
		</view>

		<!-- 支付弹窗 -->
		<uni-popup ref="paymentPopup" type="center">
			<view class="payment-popup">
				<text class="popup-title">选择支付方式</text>
				<view class="payment-options">
					<view class="payment-option" @click="selectPayment('wechat')">
						<uni-icons type="weixin" size="32" color="#07C160"></uni-icons>
						<text>微信支付</text>
						<uni-icons 
							type="checkmark" 
							size="20" 
							color="#4A90E2"
							v-if="selectedPayment === 'wechat'"
						></uni-icons>
					</view>
					<view class="payment-option" @click="selectPayment('alipay')">
						<uni-icons type="alipay" size="32" color="#1677FF"></uni-icons>
						<text>支付宝</text>
						<uni-icons 
							type="checkmark" 
							size="20" 
							color="#4A90E2"
							v-if="selectedPayment === 'alipay'"
						></uni-icons>
					</view>
				</view>
				<button class="pay-btn" @click="handlePayment">立即支付</button>
			</view>
		</uni-popup>
	</view>
</template>

<script setup>
import { ref, computed, onMounted } from 'vue'
import { onLoad } from '@dcloudio/uni-app'

const bookingData = ref({
	attractionId: '',
	attractionName: '',
	price: 0,
	visitDate: '',
	ticketCount: 1,
	entryTime: '09:00',
	contactName: '',
	contactPhone: ''
})

const selectedPayment = ref('wechat')
const serviceFee = ref(10)
const paymentPopup = ref()

const totalTicketPrice = computed(() => {
	return bookingData.value.price * bookingData.value.ticketCount
})

const totalPrice = computed(() => {
	return totalTicketPrice.value + serviceFee.value
})

const canSubmit = computed(() => {
	return (
		bookingData.value.contactName &&
		bookingData.value.contactPhone &&
		/^1[3-9]\d{9}$/.test(bookingData.value.contactPhone) &&
		bookingData.value.visitDate
	)
})

const goBack = () => {
	uni.navigateBack()
}

const getToday = () => {
	return new Date().toISOString().split('T')[0]
}

const onVisitDateChange = (e) => {
	bookingData.value.visitDate = e.detail.value
}

const onEntryTimeChange = (e) => {
	bookingData.value.entryTime = e.detail.value
}

const changeTicketCount = (delta) => {
	const newCount = bookingData.value.ticketCount + delta
	if (newCount >= 1 && newCount <= 10) {
		bookingData.value.ticketCount = newCount
	}
}

const handleSubmit = () => {
	if (!canSubmit.value) return
	
	// 验证表单
	if (!validateForm()) return
	
	// 打开支付弹窗
	paymentPopup.value.open()
}

const validateForm = () => {
	if (!bookingData.value.contactName) {
		uni.showToast({ title: '请输入联系人姓名', icon: 'none' })
		return false
	}
	
	if (!bookingData.value.contactPhone) {
		uni.showToast({ title: '请输入手机号码', icon: 'none' })
		return false
	}
	
	if (!/^1[3-9]\d{9}$/.test(bookingData.value.contactPhone)) {
		uni.showToast({ title: '手机号格式不正确', icon: 'none' })
		return false
	}
	
	return true
}

const selectPayment = (method) => {
	selectedPayment.value = method
}

const handlePayment = () => {
	// 模拟支付过程
	uni.showLoading({ title: '支付中...', mask: true })
	
	setTimeout(() => {
		uni.hideLoading()
		paymentPopup.value.close()
		
		// 支付成功
		uni.showToast({ title: '预订成功', icon: 'success' })
		
		// 跳转到订单详情
		setTimeout(() => {
			uni.redirectTo({ url: '/pages/order/order' })
		}, 1500)
	}, 2000)
}

onLoad((options) => {
	console.log('预订页接收到的参数:', options)
	
	if (options && options.data) {
		try {
			const passedData = JSON.parse(decodeURIComponent(options.data))
			console.log('解析后的预订数据:', passedData)
			
			// 使用传递的数据更新预订信息
			bookingData.value = {
				...bookingData.value,
				attractionId: passedData.attractionId || '',
				attractionName: passedData.attractionName || '',
				price: Number(passedData.price) || 0,
				visitDate: passedData.visitDate || getToday(),
				// 处理图片数据：如果有图片数组，使用第一张图片
				image: passedData.image || 
					  (Array.isArray(passedData.images) && passedData.images.length > 0) ? passedData.images[0] : ''
			}
			
			console.log('更新后的预订数据:', bookingData.value)
		} catch (error) {
			console.error('解析预订数据失败:', error)
			uni.showToast({ title: '数据解析失败', icon: 'none' })
			
			// 解析失败时使用默认数据
			bookingData.value.visitDate = getToday()
		}
	} else {
		// 没有传递数据时使用默认数据
		bookingData.value.visitDate = getToday()
	}
})

onMounted(() => {
	// 设置默认日期（作为后备）
	if (!bookingData.value.visitDate) {
		bookingData.value.visitDate = getToday()
	}
})
</script>

<style>
.container {
	padding-bottom: 120rpx;
	background: #f8f9fa;
}

.nav-header {
	display: flex;
	justify-content: space-between;
	align-items: center;
	flex-direction: row;
	padding: 30rpx;
	background: #fff;
	border-bottom: 1rpx solid #eee;
}

.nav-title {
	font-size: 32rpx;
	font-weight: bold;
	color: #333;
}

.attraction-card {
	background: #fff;
	margin: 20rpx;
	border-radius: 16rpx;
	padding: 24rpx;
	display: flex;
	gap: 20rpx;
}

.attraction-image {
	width: 160rpx;
	height: 120rpx;
	border-radius: 12rpx;
}

.attraction-info {
	flex: 1;
}

.attraction-name {
	font-size: 28rpx;
	font-weight: bold;
	color: #333;
	display: block;
	margin-bottom: 8rpx;
}

.ticket-type {
	font-size: 24rpx;
	color: #666;
	display: block;
	margin-bottom: 12rpx;
}

.attraction-price {
	font-size: 28rpx;
	color: #FF6B00;
	font-weight: bold;
}

.unit {
	font-size: 22rpx;
	color: #999;
}

.booking-form {
	margin: 20rpx;
}

.form-section {
	background: #fff;
	border-radius: 16rpx;
	padding: 30rpx;
	margin-bottom: 20rpx;
}

.section-title {
	font-size: 32rpx;
	font-weight: bold;
	color: #333;
	display: block;
	margin-bottom: 30rpx;
}

.form-group {
	display: flex;
	align-items: center;
	justify-content: space-between;
	flex-direction: row;
	margin-bottom: 30rpx;
}

.form-label {
	font-size: 28rpx;
	color: #333;
	min-width: 120rpx;
}

.form-input {
	flex: 1;
	background: #f8f9fa;
	border-radius: 12rpx;
	padding: 20rpx 24rpx;
	font-size: 28rpx;
	color: #333;
	display: flex;
	align-items: center;
	justify-content: space-between;
	flex-direction: row;
}

.ticket-selector {
	display: flex;
	align-items: center;
	flex-direction: row;
	gap: 20rpx;
}

.count-btn {
	width: 60rpx;
	height: 60rpx;
	border-radius: 50%;
	background: #4A90E2;
	color: #fff;
	font-size: 24rpx;
	font-weight: bold;
}

.count-btn:disabled {
	background: #ccc;
}

.ticket-count {
	font-size: 28rpx;
	color: #333;
	min-width: 80rpx;
	text-align: center;
}

.price-detail {
	border-top: 1rpx solid #eee;
	padding-top: 20rpx;
}

.price-item {
	display: flex;
	justify-content: space-between;
	align-items: center;
	flex-direction: row;
	margin-bottom: 20rpx;
	font-size: 26rpx;
	color: #666;
}

.price-item.total {
	border-top: 1rpx solid #eee;
	padding-top: 20rpx;
	margin-top: 20rpx;
	font-weight: bold;
}

.total-price {
	font-size: 32rpx;
	color: #FF6B00;
}

.notice-list {
	margin-top: 16rpx;
}

.notice-item {
	display: flex;
	align-items: center;
	flex-direction: row;
	margin-bottom: 16rpx;
	font-size: 24rpx;
	color: #666;
}

.notice-item text {
	margin-left: 12rpx;
}

.action-bar {
	position: fixed;
	bottom: 0;
	left: 0;
	right: 0;
	background: #fff;
	padding: 20rpx 30rpx;
	border-top: 1rpx solid #eee;
	display: flex;
	align-items: center;
	justify-content: space-between;
	flex-direction: row;
}

.price-summary {
	display: flex;
	align-items: baseline;
	flex-direction: row;
}

.total-label {
	font-size: 28rpx;
	color: #666;
	margin-right: 12rpx;
}

.total-amount {
	font-size: 36rpx;
	color: #FF6B00;
	font-weight: bold;
}

.confirm-btn {
	background: #4A90E2;
	color: #fff;
	border-radius: 40rpx;
	padding: 20rpx 40rpx;
	font-size: 28rpx;
	font-weight: bold;
}

.confirm-btn:disabled {
	background: #ccc;
}

.payment-popup {
	background: #fff;
	border-radius: 20rpx;
	padding: 40rpx;
}

.popup-title {
	font-size: 32rpx;
	font-weight: bold;
	color: #333;
	display: block;
	text-align: center;
	margin-bottom: 40rpx;
}

.payment-options {
	margin-bottom: 40rpx;
}

.payment-option {
	display: flex;
	align-items: center;
	justify-content: space-between;
	padding: 24rpx;
	border: 2rpx solid #eee;
	border-radius: 12rpx;
	margin-bottom: 20rpx;
}

.payment-option text {
	flex: 1;
	margin-left: 20rpx;
	font-size: 28rpx;
	color: #333;
}

.pay-btn {
	background: #4A90E2;
	color: #fff;
	border-radius: 12rpx;
	padding: 24rpx;
	font-size: 28rpx;
	font-weight: bold;
}
</style>