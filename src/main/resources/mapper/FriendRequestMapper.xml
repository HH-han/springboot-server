<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.travel.dao.FriendRequestDao">

    <resultMap id="friendRequestResultMap" type="com.example.travel.entity.FriendRequest">
        <id column="id" property="id"/>
        <result column="sender_id" property="senderId"/>
        <result column="receiver_id" property="receiverId"/>
        <result column="message" property="message"/>
        <result column="status" property="status"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
    </resultMap>

    <!-- 根据ID查询申请记录 -->
    <select id="findById" resultMap="friendRequestResultMap">
        SELECT * FROM friend_requests WHERE id = #{id}
    </select>

    <!-- 根据发送者ID查询申请记录 -->
    <select id="findBySenderId" resultMap="friendRequestResultMap">
        SELECT * FROM friend_requests WHERE sender_id = #{senderId}
        ORDER BY created_at DESC
    </select>

    <!-- 根据接收者ID查询申请记录 -->
    <select id="findByReceiverId" resultMap="friendRequestResultMap">
        SELECT * FROM friend_requests WHERE receiver_id = #{receiverId}
        ORDER BY created_at DESC
    </select>

    <!-- 根据状态查询申请记录 -->
    <select id="findByStatus" resultMap="friendRequestResultMap">
        SELECT * FROM friend_requests WHERE status = #{status}
        ORDER BY created_at DESC
    </select>

    <!-- 根据发送者和接收者查询申请记录 -->
    <select id="findBySenderIdAndReceiverId" resultMap="friendRequestResultMap">
        SELECT * FROM friend_requests 
        WHERE sender_id = #{senderId} AND receiver_id = #{receiverId}
        ORDER BY created_at DESC
        LIMIT 1
    </select>

    <!-- 根据接收者ID和状态查询申请记录 -->
    <select id="findByReceiverIdAndStatus" resultMap="friendRequestResultMap">
        SELECT * FROM friend_requests 
        WHERE receiver_id = #{receiverId} AND status = #{status}
        ORDER BY created_at DESC
    </select>

    <!-- 新增申请记录 -->
    <insert id="insert" parameterType="com.example.travel.entity.FriendRequest" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO friend_requests 
        (sender_id, receiver_id, message, status, created_at, updated_at)
        VALUES 
        (#{senderId}, #{receiverId}, #{message}, #{status}, #{createdAt}, #{updatedAt})
    </insert>

    <!-- 更新申请状态 -->
    <update id="updateStatus">
        UPDATE friend_requests 
        SET status = #{status}, updated_at = NOW()
        WHERE id = #{id}
    </update>

    <!-- 更新申请记录 -->
    <update id="update" parameterType="com.example.travel.entity.FriendRequest">
        UPDATE friend_requests 
        SET message = #{message}, status = #{status}, updated_at = #{updatedAt}
        WHERE id = #{id}
    </update>

    <!-- 删除申请记录 -->
    <delete id="delete">
        DELETE FROM friend_requests WHERE id = #{id}
    </delete>

    <!-- 统计待处理申请数量 -->
    <select id="countPendingByReceiverId" resultType="int">
        SELECT COUNT(*) FROM friend_requests 
        WHERE receiver_id = #{receiverId} AND status = 0
    </select>

</mapper>